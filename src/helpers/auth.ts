import basicAuth from 'express-basic-auth';
import { readFile } from 'fs/promises';

interface App {
  use: (plugin: unknown) => unknown;
}

/*
 * Generated by:
 * https://www.random.org/strings/?num=10&len=10&digits=on&upperalpha=on&loweralpha=on&unique=on&format=html&rnd=new
 */
const AUTH_REALM = 'NyDGMFeptk';

/**
 * Basic HTTP authentication
 */
export function initBasicAuth(app: App, isEnabled: boolean, userName: string, password: string) {
  if (!isEnabled) return;

  app.use(basicAuth({
    users: { [userName]: password },
    challenge: true,
    realm: AUTH_REALM,
  }));
}

/**
 * @return Promise which resolves to String,
 * with the contents of SSH private key as per provided keyPath
 */
export async function readPrivateKey(privateKeyPath?: string) {
  if(!privateKeyPath) {
    return undefined;
  }
  const privateKey = await readFile(privateKeyPath, 'utf-8');

  // console.log('services::getPrivateKey', { privateKeyPath, privateKey });

  return privateKey;
}
